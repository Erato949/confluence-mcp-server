# Confluence MCP Server v1.0.0 - Production Ready
# Git ignore patterns for secure development

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a CI server
#  and deployed from PYTHONSCRIPT.spec
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
logs/
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having conflicts across OS platforms, then comparing Pipfile.lock files can become tedious.
#   Therefore, in that case, it may be recommended to ignore Pipfile.lock.
# Pipfile.lock

# PEP 582; __pypackages__ directory
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
venv/
ENV/
env/
ENV.dev/
ENV.prod/

# Spyder project settings
.spyderproject
.spyproject

# Rove Concepts settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static checker
.pytype/

# Cython debug symbols
cython_debug/

# VSCode
.vscode/

# dotenv
.env

# macOS
.DS_Store

# Windows
Thumbs.db

# ðŸ”’ SECURITY - Configuration files with credentials
claude_desktop_config.json
claude_desktop_config_*.json

# ðŸ”’ SECURITY - Never commit credential patterns
**/config/*secret*
**/config/*credential*
**/config/*api_token*
**/config/*password*
**/*_secret*
**/*_credential* 
**/*_api_token*

# ðŸ”’ SECURITY - Backup files that might contain sensitive data
*.backup
*.bak
*~

# ðŸ”’ SECURITY - IDE files that might contain credentials
.vscode/settings.json
.idea/

# ðŸ“‹ DOCUMENTATION - Exclude internal technical documentation
Product_Technical_Architecture.md
task.md
TROUBLESHOOTING.md
